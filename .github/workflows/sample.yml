name: E2E Automation CQA
on:
  workflow_dispatch:
    inputs:
      environment:
        type: string
        description: 'Test env to execute tests. Examples: dev, predevNN, staging, prod'
        required: true
        default: dev
      parallel:
        type: choice
        default: true
        options:
          - true
          - false
      enableRetry:
        type: choice
        default: true
        options:
          - true
          - false
      username:
        type: string
        required: false
  schedule:
    - cron: '45 01 * * 1-5'

env:
  MANUAL_RUN_PROPS:
    '{
      "testEnv" : "${{ github.event.inputs.environment }}",
      "parallel" : "${{ github.event.inputs.parallel }}",
      "enableRetry" : "${{ github.event.inputs.enableRetry }}",
      "allurePrefix" : "cqa-testing/${{ github.event.inputs.environment }}",
      "username" : "${{ github.event.inputs.username }}"
    }'
  CRON_RUN_PROPS:
    '{
      "testEnv" : "dev",
      "parallel" : "true",
      "enableRetry" : "true",
      "allurePrefix" : "cqa-testing/dev"
      "username" :""
    }'

jobs:
  props:
    runs-on: ubuntu-latest
    outputs:
      env_vars: ${{ steps.extract-props.outputs.env_vars }}
    steps:
      - name: Build Extract properties
        id: extract-props
        run: |
          if [ "$GITHUB_EVENT_NAME" = "workflow_dispatch" ]; then
            echo "env_vars=${{ toJson(env.MANUAL_RUN_PROPS) }}" >> $GITHUB_OUTPUT
          else
            echo "env_vars=${{ toJson(env.CRON_RUN_PROPS) }}" >> $GITHUB_OUTPUT
          fi
      - name: Deploy Stage
        uses: fjogeleit/http-request-action@v1
        with:
           url: 'https://ouow563i35aqdho22iz5zilgai.appsync-api.us-east-2.amazonaws.com/graphql'
           method: 'POST'
           # username: ${{ secrets.AWX_USER }}
           # password: ${{ secrets.AWX_PASSWORD }}
           customHeaders: '{"Content-Type": "application/json", "x-api-key": "da2-pus63fgwtrgdrizhsjk2hnuy5a" }'
           data: '{"query":"mutation MyMutation {\n  createDashboard(input: {Branch: \"CQA\", PRname: \"Hpv4\", User: \"cb_gokulraj\", approved_by: \"\", created_time: \"12/02/2024\", action: \"\", approved_time: \"\", full_suite_test_link: \"https://cb-qa-reports.s3.amazonaws.com/cqa-testing/dev/7869077221/report1/index.html https://cb-qa-reports.s3.amazonaws.com/cqa-testing/dev/7869077221/report2/index.html\", p1_test_link: \"https://cb-qa-reports.s3.amazonaws.com/cqa-testing/staging/7868245183/index.html\", result: \"failed\"}) {\n    id\n  }\n}","variables":{}}'

  # DeployProd:
  #   name: Deploy to Production
  #   needs: [props]
  #   runs-on: ubuntu-latest
  #   environment: 
  #     name: testing
  #     url: 'http://www.myapp.com'
  #   steps:
  #     - name: Deploy
  #       run: echo I am deploying!
